import processing.sound.*;

// Flappy Bird - Programming 11 - Unit 6 Project
// June 10th, 2025
// Lawrence Mo

//To-Do List:
//1. Gravity of the Flappy Bird -FINISHED
//2. Collision between the bird and the pipes -FINISHED
//3. The pipes drawing needs to be extended -- FINISHED
//4. Points system -- FINISHED
//5. Mode Framework - Starting, Ending, Game, Interaction Screens -- FINISHED
//6. Sound effects + background theme music -- FINISHED



//GIF Image Background
PImage[] backgroundFlappyGIF;
int numberOfFrames;
int f;

//PNG Image Flappy Bird:
PImage FlappyBird;

//Pipe Images:
PImage TopPipe, BottomPipe;

//Stretching the Pipes to match the background:
PImage TopOfPipe, PipeBody;


// Pipe positions:
// Array list:
int n = 5;
int gap = 370;
int[] PositionXPipe = new int[n];
int[] topPipeY = new int[n];
int spacingBetweenPipes = 500;

//Array list: Points system - detecting if passed or not
boolean[] detectPassedPipes = new boolean[n];

//Return pipes:
int returnPipePosition;

//Player Variables:
int FlappyBirdX, FlappyBirdY, g, VelocityOfFlappyBirdY;

//Control: spaceKey
boolean spaceKey;

//points system:
int points;

//life system:
int life;

//Mode Frameworks of the StartingScreen + EndingScreen:
int mode;
final int StartingScreen = 1;
final int FlappyBirdGame = 2;
final int EndingScreen = 3;
//final int PausingTheCurrentScreen = 5;

//Starting Position:
final int WaitingToStart = 4;
float waitingTimer = 0;

//Fonts for the flappybird:
PFont  FontsFlappy;
PFont  DefaultFont;

//Sound effects:
SoundFile background;
SoundFile scoring;
SoundFile flying;
SoundFile dying;


//The INT + FLOAT ENds here: ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//setUp starts here:
void setup() {
  //Canvas Size:
  size(1400, 800);

  //Mode Frameworks:
  mode = StartingScreen;

  //points + life system:
  points = 0;
  life = 1;

  //Sounds Files imported:
  background = new SoundFile(this, "BackgroundMusicFlappyBird.mp3");
  scoring = new SoundFile(this, "GaingPointsFlappyBird.mp3");
  flying = new SoundFile(this, "WhooshFlyingFlappyBird.mp3");
  dying = new SoundFile(this, "DyingEffectFlappyBird.mp3");

  //Theme Music:
  background.loop();
  background.amp(1);
  
  //Position for spacing/layout of the pipes:
  spacingBetweenPipes = 500;

  //Fonts:
  DefaultFont = createFont("Arial", 24, true);
  FontsFlappy = createFont("FlappyBirdRegular.ttf", 47);

  //Character: Flappy Bird
  FlappyBird = loadImage("FlappyBird.png");

  //Pipes for the levels:
  TopPipe = loadImage("TopPipeFlappyBird.png");

  //Images of Pipe Cap + Cap Body:
  TopOfPipe = loadImage("TopOfPipeFlappyBird.png");
  PipeBody = loadImage("BodyOfPipesFlappyBird.png");

  int i = 0;
  while (i < n) {
    PositionXPipe[i] = width + i * spacingBetweenPipes;
    topPipeY[i] = int(random(-400, -100));

    //Setting all the pipes to "false" until detection occurs --> "true"
    detectPassedPipes[i] = false;
    i++;
  }

  //Zoom Background:
  numberOfFrames = 151;
  backgroundFlappyGIF = new PImage[ numberOfFrames ];

  int f = 0;
  while ( f < numberOfFrames ) {
    backgroundFlappyGIF[f] = loadImage("frame_"+f+"_delay-0.01s.gif");
    f++;
  }

  if ( f == numberOfFrames ) {
    f = 0;
  }

  //Player Variables:
  FlappyBirdX = width / 2;
  FlappyBirdY = height / 2;
  g = 1;
  f = 0;
} //setUp ends here: ----------------------------------------------------------------------------------



// Function to drawBackground for the canvas:
void backgroundOfCityViews() {
  //Background drawing of the Flappy Bird
  image(backgroundFlappyGIF[f], 0, 0, width, height);
  if (frameCount % 4 == 0) {
    f++;
  }

  if (f == numberOfFrames) f = 0;
} //Ends here: ------------------------------------------------------------------------------------------


